plugins {
    id 'base'
    id 'java'
}

subprojects {
	apply plugin: 'java-library'
	
	description = 'Academy Root Project'
	group = theGroup
	version = theVersion

	sourceCompatibility = theSourceCompatibility
	targetCompatibility = theSourceCompatibility
	
	// exclude source folders for test from compile time
	// include academy-shared alternative for compile and test compile
	if(project.name != 'academy-shared') {
	sourceSets {
		main {
			java {
				exclude 'src/test/java/**'
			}
			resources {
				srcDir '../academy-shared/src/main/resources'
				exclude 'src/test/resources/**'
			}
		}
			
		test {
			java {
				srcDir '../academy-shared/src/test/java'
			}
			resources {
				srcDir '../academy-shared/src/test/resources'
			}
		}
	}
	}

	repositories {
    	jcenter()
	}
	
	dependencies {
		testImplementation 'org.springframework:spring-test:5.1.7.RELEASE'
		testImplementation 'org.hamcrest:hamcrest-library:2.1'
	    testImplementation 'junit:junit:4.12'
	    testImplementation 'org.mockito:mockito-core:2.24.0'
	     
	    testImplementation 'org.springframework:spring-tx:5.1.7.RELEASE'
	}
}

project(':academy-shared') {
	// exclude source folders for test from compile time
	sourceSets {
		main {
			java {
				exclude 'src/test/java/**'
			}
			resources {
				exclude 'src/test/resources/**'
			}
		}
	}
}

project(':academy-user-detail-repository') {

    dependencies {
        api project(':academy-shared')
    }
}

project(':academy-user-detail') {

    dependencies {
        api project(':academy-shared')
        api project(':academy-user-detail-repository')
    }
}

project(':academy-user-repository') {

    dependencies {
        api project(':academy-shared')
    }
}

project(':academy-user') {

    dependencies {
        api project(':academy-shared')
        
        api project(':academy-user-repository')
        
        api project(':academy-user-detail')
    }
}


project(':academy-audit-repository') {

    dependencies {
        api project(':academy-shared')
    }
}

project(':academy-audit') {

    dependencies {
        api project(':academy-shared')
        
        api project(':academy-audit-repository')
    }
}


project(':academy-course-repository') {

    dependencies {
        api project(':academy-shared')
    }
}

project(':academy-course') {

    dependencies {
    
    	api project(':academy-shared')
    	
    	api project(':academy-user')
        
        api project(':academy-course-repository')
    }
}

project(':academy-web') {

    dependencies {
    	api project(':academy-user')
    	api project(':academy-user-repository')
    
        api project(':academy-user-detail')
        api project(':academy-user-detail-repository')
        
        api project(':academy-audit')
        api project(':academy-audit-repository')
        
        api project(':academy-course')
        api project(':academy-course-repository')
        
        api project(':academy-shared')
        api project(':academy-security')
        
    }
}

project(':academy-security') {

    dependencies {
        api project(':academy-shared')
        
        api project(':academy-user')
        
        api project(':academy-audit')
    }
}
